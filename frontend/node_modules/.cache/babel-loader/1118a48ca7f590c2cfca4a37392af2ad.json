{"ast":null,"code":"var _jsxFileName = \"/home/sarath/Documents/flickr_app/src/components/ViewNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewNotes() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [notes, setNotes] = useState([]);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      maxWidth: '36ch',\n      backgroundColor: theme.palette.background.paper\n    },\n    inline: {\n      display: 'inline',\n      fontSize: '15px'\n    }\n  }));\n  const classes = useStyles();\n\n  const listNotes = () => {\n    const API_URL = \"http://127.0.0.1:8000/test/listnotes/\";\n    axios.get(API_URL, {\n      params: {\n        id: id\n      }\n    }).then(response => {\n      console.log(response);\n      setNotes(response.data.results);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    listNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: notes.length > 0 ? notes.map((index, note) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Note\",\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"h3\",\n                  variant: \"body2\",\n                  className: classes.inline,\n                  color: \"textPrimary\",\n                  children: note.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 15\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please add some notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn\",\n        href: \"/addnotes/\" + id,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewNotes, \"t+reZKV9RWxam9u/eWdu+lHt8ZY=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = ViewNotes;\nexport default ViewNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewNotes\");","map":{"version":3,"sources":["/home/sarath/Documents/flickr_app/src/components/ViewNotes.js"],"names":["React","useState","useEffect","useParams","axios","makeStyles","List","ListItem","Divider","ListItemText","Typography","ViewNotes","id","notes","setNotes","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","fontSize","classes","listNotes","API_URL","get","params","then","response","console","log","data","results","catch","error","length","map","index","note","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nfunction ViewNotes() {\n  const { id } = useParams();\n  const [notes, setNotes] = useState([]);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: '36ch',\n      backgroundColor: theme.palette.background.paper,\n      \n    },\n    inline: {\n      display: 'inline',\n      fontSize : '15px',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const listNotes = () => {\n    const API_URL = \"http://127.0.0.1:8000/test/listnotes/\";\n    axios\n      .get(API_URL, {\n        params: { id: id },\n      })\n      .then((response) => {\n        console.log(response);\n        setNotes(response.data.results);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    listNotes();\n  }, []);\n\n  return (\n    <div className=\"container center\">\n      <h2>Notes</h2>\n      <List className={classes.root }>\n      \n      {notes.length > 0 ? (notes.map((index,note) => {\n         \n            return ( \n            <div className=\"\">\n            <ListItem alignItems=\"flex-start\">\n            <ListItemText key = {index}\n\n            primary = \"Note\"\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"h3\"\n                  variant=\"body2\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  {note.text}\n                </Typography>\n                \n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n        </div>)\n          })):\n          <h3>\n              Please add some notes\n          </h3>\n          }\n      </List>\n      <p>\n          <br/>\n        <a className=\"btn\" href={\"/addnotes/\" + id}>\n          <span>Add Note</span>\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default ViewNotes;\n"]},"metadata":{},"sourceType":"module"}